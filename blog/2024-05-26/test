from flask import Blueprint, request, jsonify
from kubernetes import client, config
from kubernetes.client.rest import ApiException

main = Blueprint('main', __name__)

# Load the Kubernetes configuration
config.load_incluster_config()
v1_auth = client.AuthenticationV1Api()

@main.route('/validate-token', methods=['POST'])
def validate_token():
    token = request.json.get('token')
    if not token:
        return jsonify({"error": "Token is required"}), 400

    tr = client.V1TokenReview(spec=client.V1TokenReviewSpec(token=token))
    
    try:
        response = v1_auth.create_token_review(body=tr)
        if response.status.authenticated:
            return jsonify({"authenticated": True, "user": response.status.user})
        else:
            return jsonify({"authenticated": False}), 401
    except ApiException as e:
        return jsonify({"error": str(e)}), 500

@main.route('/')
def home():
    return "Hello, Docker!"
