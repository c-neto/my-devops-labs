# TODO: "caused_by"=>{"type"=>"illegal_argument_exception", "reason"=>"[float] supports only finite values, but got [Infinity]"}}}}}


input {
  http_poller {
    urls => {
      logstash_monitoring => {
        method => get
        url => "http://localhost:9600/_node/stats/pipelines"
        headers => {
          "Content-Type" => "application/json"
        }
      }
    }
    request_timeout => 60
    schedule => { every => "5s" }
    codec => "json"
  }
}


filter {

  mutate {
    remove_field => [ "event" ]
  }

  mutate {
    id => "mutate_add_fake_field_a"
    add_field => { "fake_field_a" => "foo" }
  }

  mutate {
    id => "mutate_add_fake_field_b"
    add_field => { "fake_field_b" => "bar" }
  }

  ruby {
    code => "
      pipelines = []

      event.get('pipelines').each do |name, metadata|
        app = {'name' => name}
        pipeline = app.merge(metadata)
        pipelines << pipeline
      end

      event.set('pipelines', pipelines)
    "
  }

  ruby {
    code => "
      for pipeline in event.get('pipelines')

        if pipeline['plugins']['filters']['flow']['worker_millis_per_event']['current'] == 'Infinity'
          event.cancel
          break
        end

        if pipeline['plugins']['filters']['flow']['worker_millis_per_event']['last_1_minute'] == 'Infinity'
          event.cancel
          break
        end

        if pipeline['plugins']['filters']['flow']['worker_millis_per_event']['lifetime'] == 'Infinity'
          event.cancel
          break
        end

      end
    "
  }

}


output {
  # stdout { codec => json }
  # stdout { codec => rubydebug }

  opensearch {
    hosts => ["http://opensearch:9200"]
    index => "logstash"
    ssl => false
    ssl_certificate_verification => false
  }
}
